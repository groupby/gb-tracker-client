version: 2.1
jobs:
  run-tests:
    docker:
      - image: circleci/node:14-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install app dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: npm test
  deploy-cdn:
    docker:
      - image: circleci/node:14
    steps:
      - gcp-cli/install
      - deployment/gcloud-login
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install app dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: deploy to CDN
          command: |
            if [ "$CIRCLE_BRANCH" == "develop" ]
            then
              scripts/deploy_browser_dev.sh
            elif [ "$CIRCLE_BRANCH" == "production" ]
            then
              scripts/deploy_browser_prod.sh
            fi
  deploy-npm:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install app dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Authenticate with NPM registry
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: deploy to NPM
          command: |
            if [ "$CIRCLE_BRANCH" == "develop" ]
            then
              scripts/deploy_npm_dev.sh
            elif [ "$CIRCLE_BRANCH" == "production" ]
            then
              scripts/deploy_npm_prod.sh
            fi
workflows:
  main:
    jobs:
      - run-tests
      - deploy-cdn:
          context: org-global
          requires:
            - run-tests
          filters:
            branches:
              only:
                - production
                - develop
      - deploy-npm:
          context: org-global
          requires:
            - run-tests
          filters:
            branches:
              only:
                - production
                - develop
orbs:
  gcp-cli: circleci/gcp-cli@1
  deployment: groupbyinc/deployment@1